<웹과 자바스크립트>

HTML은 정적이고 동적으로 상호작용하는 WEB을 만들기 위해서 JavaScript가 등장함.

HTML을 이용해 웹페이지를 만들고 그 위에 상호작용을 위해 JavaScript를 추가 할 것.

<script> 태그로 자바스크립트가 사용될 것을 선언한다.

event: onclick, onchange, onkeydown과 같이 웹 브라우저에 일어나는 유용한 사건들
JavaScript onkeydown event attribute

이미 만들어진 웹사이트에서 콘솔을 이용하여 필요에 맞는 해결책을 얻을 수 있다.
이 웹페이지를 대상으로 콘솔이 실행된다.

데이터 타입.

자바스크립트의 자료형: https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures

문자열: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String

style 속성 안에는 CSS가 들어온다. .js와 같이 .으로 시작하는 이름은 span 태그의 class 속성(그룹)에 대응한다.
#으로 시작하는 이름은 id 속성(식별자)을 의미한다. class로 광범위하게 선택하고 id로 예외처리를 한다.
.이나 #이 없는 span은 모든 span 태그에 대응한다.

<div> 태그는 어떤 의미도 없지만 CSS나 JS로 어떤 정보를 제어하고 싶을 때 감싸주는 역할이다.
전체를 써서 줄바꿈이 된다.

<span> 태그는 같은 역할이지만 줄바꿈이 되지 않음.

제어할 태그 선택: https://developer.mozilla.org/ko/docs/Web/API/Document/querySelector

비교연산자

===와 ==는 다르다
https://velog.io/@filoscoder/-%EC%99%80-%EC%9D%98-%EC%B0%A8%EC%9D%B4-oak1091tes

html에서 <, >는 태그와 헷갈리므로 &lt;, &gt;로 쓴다.

this: 태그 안에서 자기 자신을 가리키는 키워드. 현재 함수가 호출되는 오브젝트를 참조.
self: window를 참조.
https://velog.io/@woohyun_park/self-vs-this
https://k9e4h.tistory.com/141

배열: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array

document.querySelector는 검색된 결과에 첫번째만 가져온다.

property: 객체에 속한 변수
method: 객체에 속한 함수

객체의 프로퍼티끼리는 쉼표가 필요하다.

파일을 쪼개서 정리정돈 하면 캐시로 저장된다.

라이브러리와 프레임워크
라이브러리: 프로그램에 필요한 부품이 되는 소프트웨어가 정리되어 있음.
-> 필요한 부분을 가져와서 사용함.
프레임워크: 만들고자 하는 프로그램에 따라 공통적인 부분을 미리 만들어둠.
-> 직접 프레임워크 안으로 들어가서 디테일을 수정해서 사용함.

jQuery: CDN으로 간편하게 불러올 수 있음

UI: User Interface, 사용자들이 시스템을 제어하기 위해서 조작하는 장치

API: Application Programming Interface, 프로그래머들이 사용하는 조작 장치

document 객체
DOM 객체

웹브라우저 자체를 제어하는 window 객체

웹페이지를 리로드하지 않고 정보를 변경하는 ajax 객체

웹페이지가 리로드되어도 현재 상태를 유지하고 싶다면 cookie

인터넷이 끊겨도 동작하는 웹페이지를 만들고 싶다면 offine web application

화상통신 웹앱 webRTC

음성을 인식하고 음성으로 정보를 전달하고 싶다면 speech로 시작하는 API

3차원 그래픽으로 게임과 같은 것을 만들고 싶다면 webGL webVR
